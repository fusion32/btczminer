import hashlib
import sys

test_num = 1
if len(sys.argv) >= 2:
	test_num = int(sys.argv[1])

block_header = (
	b'\x04\x00\x00\x00\xE8\xB9\x46\x3A\xB4\x74\x20\x9C\x91\xD9\x39\x05'
	b'\x1B\x73\xA4\x8C\x66\xA4\x0A\x13\xA8\x4B\x61\x80\x5F\x41\x3E\x75'
	b'\x7B\x00\x00\x00\xEC\x79\x39\xC4\x27\x09\xBC\x10\x10\x90\x62\x46'
	b'\x4B\x00\x35\xC2\xA8\x24\xC1\xA3\x30\x38\x40\x5C\x53\x55\x20\x9E'
	b'\xB4\x98\x21\x6B\xB5\x79\x4E\xF0\x52\x6D\x8C\x3B\xC6\x59\x65\xE9'
	b'\xF1\xEA\x6A\xB2\xCC\xC7\x16\x93\x05\xC7\x0E\xB9\xF3\x43\x66\xB2'
	b'\xCE\xF3\x9D\x18\xCA\x75\x46\x61\xB8\x9C\x00\x1E\xDE\xFA\xCE\x03'
	b'\x10\xDF\xB8\x52\x29\x01\x68\x9E\xDD\xA0\x65\xDD\x58\xF5\xCD\x6D'
	b'\x00\x00\x00\x00\x00\x00\x00\x00\xC2\x01\xB6\x81')
h = hashlib.blake2b(digest_size = 54,
	person = b'BitcoinZ\x90\x00\x00\x00\x05\x00\x00\x00')
h.update(block_header)

if test_num == 1:
	expected = (
		b'\x66\x73\xFA\xF3\x65\x27\x3E\xB1\x93\xD0\x09\xE6\xEB\xFB\xF2\x4F'
		b'\x7A\x88\x98\xB9\xE4\xE6\x53\x72\x28\x2F\x1B\x67\x3C\x64\xBA\x58'
		b'\xBA\xBE\xA9\x0B\xCC\x24\xCE\xD3\x9B\x61\x4B\x9D\x5B\xCC\xDC\xFF'
		b'\x5D\x91\x02\x03\x37\x3C')
	result = h.digest()
	print('result = {}'.format(result.hex()))
	print('expected = {}'.format(expected.hex()))
	print('equal = {}'.format(result == expected))

elif test_num == 2:
	expected = (
		b'\xA0\x2B\xA4\x88\xC6\x9F\xFE\xB7\x02\x2D\x44\x1D\x4C\x8F\x07\x5A'
		b'\xC1\x97\xF3\x3B\x4E\x29\x4E\x0B\xAB\x4E\x50\x99\x03\x68\xF0\x47'
		b'\x45\x23\xD2\x24\x8C\x21\x61\xFA\xCD\x6B\xF2\x8F\xC8\x59\x7B\xC3'
		b'\x10\xD1\xBB\x2B\x38\x2D')
	h.update((5259811).to_bytes(4, "little"))
	result = h.digest()
	print('result = {}'.format(result.hex()))
	print('expected = {}'.format(expected.hex()))
	print('equal = {}'.format(result == expected))
